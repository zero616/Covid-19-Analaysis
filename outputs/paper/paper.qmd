---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(palmerpenguins)
```


# Introduction

You can and should cross-reference sections and sub-sections. 

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}
```{r}
file_path <- "../../outputs/data/bully_clean_data.csv"
bully_clean_data <- read.csv(file_path)
sample_data <- head(bully_clean_data, 6)
data<-bully_clean_data
```



Talk way more about it. 

```{r}
data$MonthIndicator <- factor(data$Month, levels = month.abb)

# Regression to remove seasonal patterns and time trends
pre_process_model <- lm(logSearchst ~ as.factor(Year) + MonthIndicator, data = data)
data$logSearchst_star <- residuals(pre_process_model)

# Step 2: Month-by-Month Event Study Model
event_study_model <- lm(logSearchst_star ~ factor(Month, ordered = TRUE) + alphaPriorYearst + factor(State), data = data)

# Step 3: Nationwide Before-After Specification
before_after_model <- lm(logSearchst_star ~ factor(PostCOVID) + factor(State), data = data)

# Step 4: Time Period Analysis
time_period_model <- lm(logSearchst_star ~ factor(PostSpring) + factor(PostSummer) + factor(PostFall) + factor(State), data = data)

# Step 5: Differential Impact Analysis
differential_model <- lm(logSearchst_star ~ factor(PostSpring) + factor(PostSummer) + factor(PostFall) + factor(PostFall) * InPersons + factor(State), data = data)

# Additional Information
# Clustered standard errors
library(lmtest)
coeftest(event_study_model, vcov. = vcovHC(event_study_model, type = "HC1"))

# Weighted by population
weighted_model <- lm(logSearchst_star ~ factor(Month, ordered = TRUE) + alphaPriorYearst + factor(State), data = data, weights = your_population_weights)
```



# Results

```{r}
library(ggplot2)
library(dplyr)

# Assuming the date format is "%Y-%m-%d", you can use the following code
bully_data <- subset(bully_clean_data, bully_type == "bully")
bully_data <- bully_data %>%
  group_by(date) %>%
  summarise(Total = sum(num_of_searches))
schbully_data <- subset(bully_clean_data, bully_type == "schbully")
cyberbully_data <- subset(bully_clean_data, bully_type == "cyberbully")
# Create a ggplot object for the composite search measure
ggplot(bully_data, aes(x = date, y = Total)) +
  geom_point() +
  geom_segment(data = subset(bully_data, !is.na(lag(date))), aes(x = lag(date), y = lag(Total), xend = date, yend = Total), color = "blue") +
  ggtitle("Composite Search Intensity for School Bullying and Cyberbullying") +
  xlab("Date") +
  ylab("Logarithm of Nationwide Search Intensity (Relative to Jan 2016)") +
  geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype = "dashed", color = "red")

# Create a ggplot object for School Bullying search intensity
ggplot(schbully_data, aes(x = date, y = num_of_searches)) +
  geom_point() +
  geom_line() +
  ggtitle("Search Intensity for School Bullying") +
  xlab("Date") +
  ylab("Logarithm of Nationwide Search Intensity (Relative to Jan 2016)") +
  geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype = "dashed", color = "red")

# Create a ggplot object for Cyberbullying search intensity
ggplot(cyberbully_data, aes(x = date, y = num_of_searches)) +
  geom_point() +
  geom_line() +
  ggtitle("Search Intensity for Cyberbullying") +
  xlab("Date") +
  ylab("Logarithm of Nationwide Search Intensity (Relative to Jan 2016)") +
  geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype = "dashed", color = "red")
```


```{r}
data <- data.frame(
  x = c(1, 2, 3, 4, 5),
  y = c(2, 4, 1, 6, 3)
)

# 指定要连接的点
connections <- data.frame(
  x1 = c(1, 2, 3, 4),
  y1 = c(2, 4, 1, 6),
  x2 = c(2, 3, 4, 5),
  y2 = c(4, 1, 6, 3)
)

# 使用ggplot函数创建图形
ggplot(data, aes(x = x, y = y)) +
  geom_point(color = "blue", size = 3) +
  geom_segment(data = connections, aes(x = x1, y = y1, xend = x2, yend = y2), color = "red") +
  labs(title = "点连接不同点的图", x = "X轴", y = "Y轴") +
  theme_minimal()
```



# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check


## Diagnostics




\newpage


# References


